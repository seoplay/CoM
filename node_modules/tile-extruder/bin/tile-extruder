#!/usr/bin/env node

const program = require("commander");
const tileExtruder = require("../index");

const toInt = v => parseInt(v, 10);
const toHex = v => parseInt(v, 16);

program
  .version("1.1.0")
  .description("A small CLI to extrude tiles. Use --help for more information.")
  .option("-w, --tileWidth <integer>", "tile width in pixels", toInt)
  .option("-h, --tileHeight <integer>", "tile height in pixels", toInt)
  .option("-i, --input <path>", "the path to the tileset you want to extrude")
  .option("-o, --output <path>", "the path to output the extruded tileset image")
  .option(
    "-c, --color [hex=0x00000000]",
    "RGBA hex color to use for the background color, only matters if there's margin or spacing (default: transparent)",
    toHex
  )
  .option(
    "-m, --margin [integer=0]",
    "number of pixels between tiles and the edge of the tileset image",
    toInt,
    0
  )
  .option("-s, --spacing [integer=0]", "number of pixels between neighboring tiles", toInt, 0)
  .parse(process.argv);

const {
  tileWidth,
  tileHeight,
  margin,
  spacing,
  color,
  input: inputPath,
  output: outputPath
} = program;

if (!tileWidth) {
  console.log("\nMissing tileWidth! See help below for usage information:");
  program.help();
}
if (!tileHeight) {
  console.log("\nMissing tileHeight! See help below for usage information:");
  program.help();
}
if (!inputPath) {
  console.log("\nMissing path to tileset image! See help below for usage information:");
  program.help();
}
if (!outputPath) {
  console.log("\nMissing path save extruded tileset image! See help below for usage information:");
  program.help();
}

tileExtruder(tileWidth, tileHeight, margin, spacing, color, inputPath, outputPath);
